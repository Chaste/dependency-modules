unchanged:
--- VTK-6.2.0.orig/Wrapping/Tcl/vtkTkAppInit.cxx
+++ VTK-6.2.0/Wrapping/Tcl/vtkTkAppInit.cxx
@@ -165,6 +165,8 @@ int Tcl_AppInit(Tcl_Interp *interp)
   // Help Tcl find the Tcl/Tk helper files.
   const char* relative_dirs[] =
     {
+      "../share/tcltk",
+      "../../share/tcltk",
       "TclTk/lib",
       ".." VTK_INSTALL_TCL_DIR,
       0
unchanged:
--- VTK-6.3.0.orig/CMake/vtkModuleMacros.cmake
+++ VTK-6.3.0/CMake/vtkModuleMacros.cmake
@@ -401,8 +401,8 @@ endfunction()
 function(vtk_target_name _name)
   get_property(_type TARGET ${_name} PROPERTY TYPE)
   if(NOT "${_type}" STREQUAL EXECUTABLE AND NOT VTK_JAVA_INSTALL)
-    set_property(TARGET ${_name} PROPERTY VERSION 1)
-    set_property(TARGET ${_name} PROPERTY SOVERSION 1)
+    set_property(TARGET ${_name} PROPERTY VERSION ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}.${VTK_BUILD_VERSION})
+    set_property(TARGET ${_name} PROPERTY SOVERSION ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION})
   endif()
   if("${_name}" MATCHES "^[Vv][Tt][Kk]")
     set(_vtk "")
unchanged:
--- VTK-6.3.0.orig/Rendering/Tk/CMakeLists.txt
+++ VTK-6.3.0/Rendering/Tk/CMakeLists.txt
@@ -122,7 +122,7 @@ if(TK_FOUND AND VTK_USE_TK)
     vtk_target_install(vtkRenderingPythonTkWidgets)
 
     set_property(TARGET vtkRenderingPythonTkWidgets PROPERTY OUTPUT_NAME
-         vtkRenderingPythonTkWidgets-${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION})
+         vtkRenderingPythonTkWidgets)
 
     set(Module_PYTHON_LIBS ${VTK_TK_LIBRARIES})
     if(VTK_USE_X)
unchanged:
--- VTK-6.3.0.orig/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.h
+++ VTK-6.3.0/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.h
@@ -143,6 +143,10 @@ private:
   // is called internally when matplotlib rendering is first needed and is used
   // to implement IsAvailable.
   static Availability CheckMPLAvailability();
+  static void DisableMPL()
+    {
+    MPLMathTextAvailable = UNAVAILABLE;
+    };
 
   // Description:
   // Cache the availability of matplotlib in the current python session.
unchanged:
--- VTK-6.3.0.orig/IO/SQL/vtkSQLiteDatabase.cxx
+++ VTK-6.3.0/IO/SQL/vtkSQLiteDatabase.cxx
@@ -29,7 +29,7 @@
 #include <vtksys/ios/fstream>
 #include <vtksys/ios/sstream>
 
-#include <vtksqlite/vtk_sqlite3.h>
+#include <sqlite3.h>
 
 vtkStandardNewMacro(vtkSQLiteDatabase);
 
@@ -307,15 +307,15 @@ bool vtkSQLiteDatabase::Open(const char*
       }
     }
 
-  int result = vtk_sqlite3_open(this->DatabaseFileName, & (this->SQLiteInstance));
+  int result = sqlite3_open(this->DatabaseFileName, & (this->SQLiteInstance));
 
-  if (result != VTK_SQLITE_OK)
+  if (result != SQLITE_OK)
     {
     vtkDebugMacro(<<"SQLite open() failed.  Error code is "
                   << result << " and message is "
-                  << vtk_sqlite3_errmsg(this->SQLiteInstance) );
+                  << sqlite3_errmsg(this->SQLiteInstance) );
 
-    vtk_sqlite3_close(this->SQLiteInstance);
+    sqlite3_close(this->SQLiteInstance);
     return false;
     }
   else
@@ -334,8 +334,8 @@ void vtkSQLiteDatabase::Close()
     }
   else
     {
-    int result = vtk_sqlite3_close(this->SQLiteInstance);
-    if (result != VTK_SQLITE_OK)
+    int result = sqlite3_close(this->SQLiteInstance);
+    if (result != SQLITE_OK)
       {
       vtkWarningMacro(<< "Close(): SQLite returned result code " << result);
       }
@@ -374,7 +374,7 @@ vtkStringArray * vtkSQLiteDatabase::GetT
   if (!status)
     {
     vtkErrorMacro(<< "GetTables(): Database returned error: "
-                  << vtk_sqlite3_errmsg(this->SQLiteInstance) );
+                  << sqlite3_errmsg(this->SQLiteInstance) );
     query->Delete();
     return this->Tables;
     }
@@ -403,7 +403,7 @@ vtkStringArray * vtkSQLiteDatabase::GetR
   if (!status)
     {
     vtkErrorMacro(<< "GetRecord(" << table << "): Database returned error: "
-                  << vtk_sqlite3_errmsg(this->SQLiteInstance) );
+                  << sqlite3_errmsg(this->SQLiteInstance) );
     query->Delete();
     return NULL;
     }
@@ -467,10 +467,10 @@ bool vtkSQLiteDatabase::ParseURL(const c
 // ----------------------------------------------------------------------
 bool vtkSQLiteDatabase::HasError()
 {
-  return (vtk_sqlite3_errcode(this->SQLiteInstance)!=VTK_SQLITE_OK);
+  return (sqlite3_errcode(this->SQLiteInstance)!=SQLITE_OK);
 }
 
 const char* vtkSQLiteDatabase::GetLastErrorText()
 {
-  return vtk_sqlite3_errmsg(this->SQLiteInstance);
+  return sqlite3_errmsg(this->SQLiteInstance);
 }
unchanged:
--- VTK-6.3.0.orig/IO/SQL/vtkSQLiteDatabase.h
+++ VTK-6.3.0/IO/SQL/vtkSQLiteDatabase.h
@@ -49,7 +49,7 @@
 class vtkSQLQuery;
 class vtkSQLiteQuery;
 class vtkStringArray;
-struct vtk_sqlite3;
+struct sqlite3;
 
 class VTKIOSQL_EXPORT vtkSQLiteDatabase : public vtkSQLDatabase
 {
@@ -147,7 +147,7 @@ protected:
   virtual bool ParseURL(const char* url);
 
 private:
-  vtk_sqlite3 *SQLiteInstance;
+  sqlite3 *SQLiteInstance;
 
   // We want this to be private, a user of this class
   // should not be setting this for any reason
unchanged:
--- VTK-6.3.0.orig/IO/SQL/vtkSQLiteQuery.cxx
+++ VTK-6.3.0/IO/SQL/vtkSQLiteQuery.cxx
@@ -25,7 +25,7 @@
 #include "vtkVariant.h"
 #include "vtkVariantArray.h"
 
-#include <vtksqlite/vtk_sqlite3.h>
+#include <sqlite3.h>
 
 #include <cassert>
 
@@ -43,7 +43,7 @@ vtkSQLiteQuery::vtkSQLiteQuery()
 {
   this->Statement = NULL;
   this->InitialFetch = true;
-  this->InitialFetchResult=VTK_SQLITE_DONE;
+  this->InitialFetchResult=SQLITE_DONE;
   this->LastErrorText = NULL;
   this->TransactionInProgress = false;
 }
@@ -61,7 +61,7 @@ vtkSQLiteQuery::~vtkSQLiteQuery()
     {
     if (this->Database != NULL)
       {
-      vtk_sqlite3_finalize(this->Statement);
+      sqlite3_finalize(this->Statement);
       this->Statement = NULL;
       }
     }
@@ -128,8 +128,8 @@ bool vtkSQLiteQuery::SetQuery(const char
   if (this->Statement)
     {
     vtkDebugMacro(<<"Finalizing old statement");
-    int finalizeStatus = vtk_sqlite3_finalize(this->Statement);
-    if (finalizeStatus != VTK_SQLITE_OK)
+    int finalizeStatus = sqlite3_finalize(this->Statement);
+    if (finalizeStatus != SQLITE_OK)
       {
       vtkWarningMacro(<<"SetQuery(): Finalize returned unexpected code "
                       << finalizeStatus);
@@ -148,19 +148,19 @@ bool vtkSQLiteQuery::SetQuery(const char
       return false;
       }
 
-    vtk_sqlite3 *db = dbContainer->SQLiteInstance;
+    sqlite3 *db = dbContainer->SQLiteInstance;
     const char *unused_statement;
 
-    int prepareStatus = vtk_sqlite3_prepare_v2(db,
+    int prepareStatus = sqlite3_prepare_v2(db,
                                                this->Query,
                                                static_cast<int>(strlen(this->Query)),
                                                &this->Statement,
                                                &unused_statement);
 
-    if (prepareStatus != VTK_SQLITE_OK)
+    if (prepareStatus != SQLITE_OK)
       {
-      this->SetLastErrorText(vtk_sqlite3_errmsg(db));
-      vtkWarningMacro(<<"SetQuery(): vtk_sqlite3_prepare_v2() failed with error message "
+      this->SetLastErrorText(sqlite3_errmsg(db));
+      vtkWarningMacro(<<"SetQuery(): sqlite3_prepare_v2() failed with error message "
                     << this->GetLastErrorText()
                     << " on statement: '"
                     << this->Query << "'");
@@ -191,31 +191,31 @@ bool vtkSQLiteQuery::Execute()
     }
   else
     {
-    vtk_sqlite3_reset(this->Statement);
+    sqlite3_reset(this->Statement);
     }
 
   vtkDebugMacro(<<"Execute(): Query ready to execute.");
 
   this->InitialFetch = true;
-  int result = vtk_sqlite3_step(this->Statement);
+  int result = sqlite3_step(this->Statement);
   this->InitialFetchResult = result;
 
-  if (result == VTK_SQLITE_DONE)
+  if (result == SQLITE_DONE)
     {
     this->SetLastErrorText(NULL);
     this->Active = true;
     return true;
     }
-  else if (result != VTK_SQLITE_ROW)
+  else if (result != SQLITE_ROW)
     {
     vtkSQLiteDatabase *dbContainer =
       vtkSQLiteDatabase::SafeDownCast(this->Database);
     assert(dbContainer != NULL);
 
-    vtk_sqlite3 *db = dbContainer->SQLiteInstance;
+    sqlite3 *db = dbContainer->SQLiteInstance;
 
-    this->SetLastErrorText(vtk_sqlite3_errmsg(db));
-    vtkDebugMacro(<< "Execute(): vtk_sqlite3_step() returned error message "
+    this->SetLastErrorText(sqlite3_errmsg(db));
+    vtkDebugMacro(<< "Execute(): sqlite3_step() returned error message "
                   << this->GetLastErrorText());
     this->Active = false;
     return false;
@@ -236,7 +236,7 @@ int vtkSQLiteQuery::GetNumberOfFields()
     }
   else
     {
-    return vtk_sqlite3_column_count(this->Statement);
+    return sqlite3_column_count(this->Statement);
     }
 }
 
@@ -256,7 +256,7 @@ const char * vtkSQLiteQuery::GetFieldNam
     }
   else
     {
-    return vtk_sqlite3_column_name(this->Statement, column);
+    return sqlite3_column_name(this->Statement, column);
     }
 }
 
@@ -276,22 +276,22 @@ int vtkSQLiteQuery::GetFieldType(int col
     }
   else
     {
-    switch (vtk_sqlite3_column_type(this->Statement, column))
+    switch (sqlite3_column_type(this->Statement, column))
       {
-      case VTK_SQLITE_INTEGER:
+      case SQLITE_INTEGER:
         return VTK_INT;
-      case VTK_SQLITE_FLOAT:
+      case SQLITE_FLOAT:
         return VTK_FLOAT;
-      case VTK_SQLITE_TEXT:
+      case SQLITE_TEXT:
         return VTK_STRING;
-      case VTK_SQLITE_BLOB:
+      case SQLITE_BLOB:
         return VTK_STRING; // until we have a BLOB type of our own
-      case VTK_SQLITE_NULL:
+      case SQLITE_NULL:
         return VTK_VOID; // ??? what makes sense here?
       default:
       {
       vtkErrorMacro(<<"GetFieldType(): Unknown data type "
-                    << vtk_sqlite3_column_type(this->Statement, column)
+                    << sqlite3_column_type(this->Statement, column)
                     <<" from SQLite.");
       return VTK_VOID;
       }
@@ -312,7 +312,7 @@ bool vtkSQLiteQuery::NextRow()
     {
     vtkDebugMacro(<<"NextRow(): Initial fetch being handled.");
     this->InitialFetch = false;
-    if (this->InitialFetchResult == VTK_SQLITE_DONE)
+    if (this->InitialFetchResult == SQLITE_DONE)
       {
       return false;
       }
@@ -323,12 +323,12 @@ bool vtkSQLiteQuery::NextRow()
     }
   else
     {
-    int result = vtk_sqlite3_step(this->Statement);
-    if (result == VTK_SQLITE_DONE)
+    int result = sqlite3_step(this->Statement);
+    if (result == SQLITE_DONE)
       {
       return false;
       }
-    else if (result == VTK_SQLITE_ROW)
+    else if (result == SQLITE_ROW)
       {
       return true;
       }
@@ -336,8 +336,8 @@ bool vtkSQLiteQuery::NextRow()
       {
       vtkSQLiteDatabase *dbContainer = vtkSQLiteDatabase::SafeDownCast( this->Database );
       assert(dbContainer != NULL);
-      vtk_sqlite3 *db = dbContainer->SQLiteInstance;
-      this->SetLastErrorText(vtk_sqlite3_errmsg(db));
+      sqlite3 *db = dbContainer->SQLiteInstance;
+      this->SetLastErrorText(sqlite3_errmsg(db));
       vtkErrorMacro(<<"NextRow(): Database returned error code "
                     << result << " with the following message: "
                     << this->GetLastErrorText());
@@ -363,33 +363,33 @@ vtkVariant vtkSQLiteQuery::DataValue(vtk
     }
   else
     {
-    switch (vtk_sqlite3_column_type(this->Statement, column))
+    switch (sqlite3_column_type(this->Statement, column))
       {
-      case VTK_SQLITE_INTEGER:
-        return vtkVariant(vtk_sqlite3_column_int(this->Statement, column));
+      case SQLITE_INTEGER:
+        return vtkVariant(sqlite3_column_int(this->Statement, column));
 
-      case VTK_SQLITE_FLOAT:
-        return vtkVariant(vtk_sqlite3_column_double(this->Statement, column));
+      case SQLITE_FLOAT:
+        return vtkVariant(sqlite3_column_double(this->Statement, column));
 
-      case VTK_SQLITE_TEXT:
+      case SQLITE_TEXT:
       {
       vtksys_ios::ostringstream str;
-      str << vtk_sqlite3_column_text(this->Statement, column);
+      str << sqlite3_column_text(this->Statement, column);
       return vtkVariant(vtkStdString(str.str()));
       }
 
-      case VTK_SQLITE_BLOB:
+      case SQLITE_BLOB:
       {
       // This is a hack ... by passing the BLOB to vtkStdString with an explicit
       // byte count, we ensure that the string will store all of the BLOB's bytes,
       // even if there are NULL values.
 
       return vtkVariant(vtkStdString(
-        static_cast<const char*>(vtk_sqlite3_column_blob(this->Statement, column)),
-        vtk_sqlite3_column_bytes(this->Statement, column)));
+        static_cast<const char*>(sqlite3_column_blob(this->Statement, column)),
+        sqlite3_column_bytes(this->Statement, column)));
       }
 
-      case VTK_SQLITE_NULL:
+      case SQLITE_NULL:
       default:
         return vtkVariant();
       }
@@ -420,11 +420,11 @@ bool vtkSQLiteQuery::BeginTransaction()
   vtkSQLiteDatabase *dbContainer = vtkSQLiteDatabase::SafeDownCast( this->Database );
   assert(dbContainer != NULL);
 
-  vtk_sqlite3 *db = dbContainer->SQLiteInstance;
+  sqlite3 *db = dbContainer->SQLiteInstance;
   char *errorMessage = NULL;
-  int result = vtk_sqlite3_exec(db, BEGIN_TRANSACTION, NULL, NULL, &errorMessage);
+  int result = sqlite3_exec(db, BEGIN_TRANSACTION, NULL, NULL, &errorMessage);
 
-  if (result == VTK_SQLITE_OK)
+  if (result == SQLITE_OK)
     {
     this->TransactionInProgress = true;
     this->SetLastErrorText(NULL);
@@ -448,7 +448,7 @@ bool vtkSQLiteQuery::CommitTransaction()
 {
   if (this->Statement)
     {
-    vtk_sqlite3_finalize(this->Statement);
+    sqlite3_finalize(this->Statement);
     this->Statement = NULL;
     }
 
@@ -460,11 +460,11 @@ bool vtkSQLiteQuery::CommitTransaction()
 
   vtkSQLiteDatabase *dbContainer = vtkSQLiteDatabase::SafeDownCast( this->Database );
   assert(dbContainer != NULL);
-  vtk_sqlite3 *db = dbContainer->SQLiteInstance;
+  sqlite3 *db = dbContainer->SQLiteInstance;
   char *errorMessage = NULL;
-  int result = vtk_sqlite3_exec(db, COMMIT_TRANSACTION, NULL, NULL, &errorMessage);
+  int result = sqlite3_exec(db, COMMIT_TRANSACTION, NULL, NULL, &errorMessage);
 
-  if (result == VTK_SQLITE_OK)
+  if (result == SQLITE_OK)
     {
     this->TransactionInProgress = false;
     this->SetLastErrorText(NULL);
@@ -496,11 +496,11 @@ bool vtkSQLiteQuery::RollbackTransaction
 
   vtkSQLiteDatabase *dbContainer = vtkSQLiteDatabase::SafeDownCast( this->Database );
   assert(dbContainer != NULL);
-  vtk_sqlite3 *db = dbContainer->SQLiteInstance;
+  sqlite3 *db = dbContainer->SQLiteInstance;
   char *errorMessage = NULL;
-  int result = vtk_sqlite3_exec(db, ROLLBACK_TRANSACTION, NULL, NULL, &errorMessage);
+  int result = sqlite3_exec(db, ROLLBACK_TRANSACTION, NULL, NULL, &errorMessage);
 
-  if (result == VTK_SQLITE_OK)
+  if (result == SQLITE_OK)
     {
     this->TransactionInProgress = false;
     this->SetLastErrorText(NULL);
@@ -644,11 +644,11 @@ bool vtkSQLiteQuery::BindIntegerParamete
   if (this->Active)
     {
     this->Active = false;
-    vtk_sqlite3_reset(this->Statement);
+    sqlite3_reset(this->Statement);
     }
-  int status = vtk_sqlite3_bind_int(this->Statement, index+1, value);
+  int status = sqlite3_bind_int(this->Statement, index+1, value);
 
-  if (status != VTK_SQLITE_OK)
+  if (status != SQLITE_OK)
     {
     vtksys_ios::ostringstream errormessage;
     errormessage << "sqlite_bind_int returned error: " << status;
@@ -673,11 +673,11 @@ bool vtkSQLiteQuery::BindInt64Parameter(
   if (this->Active)
     {
     this->Active = false;
-    vtk_sqlite3_reset(this->Statement);
+    sqlite3_reset(this->Statement);
     }
-  int status = vtk_sqlite3_bind_int(this->Statement, index+1, static_cast<vtk_sqlite_int64>(value));
+  int status = sqlite3_bind_int(this->Statement, index+1, static_cast<sqlite_int64>(value));
 
-  if (status != VTK_SQLITE_OK)
+  if (status != SQLITE_OK)
     {
     vtksys_ios::ostringstream errormessage;
     errormessage << "sqlite_bind_int64 returned error: " << status;
@@ -702,12 +702,12 @@ bool vtkSQLiteQuery::BindDoubleParameter
   if (this->Active)
     {
     this->Active = false;
-    vtk_sqlite3_reset(this->Statement);
+    sqlite3_reset(this->Statement);
     }
 
-  int status = vtk_sqlite3_bind_double(this->Statement, index+1, value);
+  int status = sqlite3_bind_double(this->Statement, index+1, value);
 
-  if (status != VTK_SQLITE_OK)
+  if (status != SQLITE_OK)
     {
     vtksys_ios::ostringstream errormessage;
     errormessage << "sqlite_bind_double returned error: " << status;
@@ -731,12 +731,12 @@ bool vtkSQLiteQuery::BindStringParameter
   if (this->Active)
     {
     this->Active = false;
-    vtk_sqlite3_reset(this->Statement);
+    sqlite3_reset(this->Statement);
     }
 
-  int status = vtk_sqlite3_bind_text(this->Statement, index+1, value, length, VTK_SQLITE_TRANSIENT);
+  int status = sqlite3_bind_text(this->Statement, index+1, value, length, SQLITE_TRANSIENT);
 
-  if (status != VTK_SQLITE_OK)
+  if (status != SQLITE_OK)
     {
     vtksys_ios::ostringstream errormessage;
     errormessage << "sqlite_bind_text returned error: " << status;
@@ -760,17 +760,17 @@ bool vtkSQLiteQuery::BindBlobParameter(i
   if (this->Active)
     {
     this->Active = false;
-    vtk_sqlite3_reset(this->Statement);
+    sqlite3_reset(this->Statement);
     }
 
   int status =
-    vtk_sqlite3_bind_blob(this->Statement,
+    sqlite3_bind_blob(this->Statement,
                           index+1,
                           data,
                           length,
-                          VTK_SQLITE_TRANSIENT);
+                          SQLITE_TRANSIENT);
 
-  if (status != VTK_SQLITE_OK)
+  if (status != SQLITE_OK)
     {
     vtksys_ios::ostringstream errormessage;
     errormessage << "sqlite_bind_blob returned error: " << status;
@@ -794,12 +794,12 @@ bool vtkSQLiteQuery::ClearParameterBindi
   if (this->Active)
     {
     this->Active = false;
-    vtk_sqlite3_reset(this->Statement);
+    sqlite3_reset(this->Statement);
     }
 
-  int status = vtk_sqlite3_clear_bindings(this->Statement);
+  int status = sqlite3_clear_bindings(this->Statement);
 
-  if (status != VTK_SQLITE_OK)
+  if (status != SQLITE_OK)
     {
     vtksys_ios::ostringstream errormessage;
     errormessage << "sqlite_clear_bindings returned error: " << status;
unchanged:
--- VTK-6.3.0.orig/IO/SQL/vtkSQLiteQuery.h
+++ VTK-6.3.0/IO/SQL/vtkSQLiteQuery.h
@@ -47,7 +47,7 @@
 class vtkSQLiteDatabase;
 class vtkVariant;
 class vtkVariantArray;
-struct vtk_sqlite3_stmt;
+struct sqlite3_stmt;
 
 class VTKIOSQL_EXPORT vtkSQLiteQuery : public vtkSQLQuery
 {
@@ -155,7 +155,7 @@ private:
   vtkSQLiteQuery(const vtkSQLiteQuery &); // Not implemented.
   void operator=(const vtkSQLiteQuery &); // Not implemented.
 
-  vtk_sqlite3_stmt *Statement;
+  sqlite3_stmt *Statement;
   bool InitialFetch;
   int InitialFetchResult;
   char *LastErrorText;
unchanged:
--- VTK-6.3.0.orig/ThirdParty/sqlite/CMakeLists.txt
+++ VTK-6.3.0/ThirdParty/sqlite/CMakeLists.txt
@@ -1,4 +1,3 @@
 set(vtksqlite_THIRD_PARTY 1)
-set(vtksqlite_LIBRARIES vtksqlite)
+set(vtksqlite_LIBRARIES sqlite3)
 vtk_module_export_info()
-add_subdirectory(vtksqlite)
unchanged:
--- VTK-6.3.0.orig/Parallel/MPI4Py/CMakeLists.txt
+++ VTK-6.3.0/Parallel/MPI4Py/CMakeLists.txt
@@ -18,7 +18,7 @@ if(VTK_USE_SYSTEM_MPI4PY)
     mark_as_advanced(MPI4PY_INCLUDE_DIR)
   endif()
 else()
-  set(MPI4PY_INCLUDE_DIR "${vtkmpi4py_SOURCE_DIR}/vtkmpi4py/src/include")
+  set(MPI4PY_INCLUDE_DIR "/usr/include")
 endif()
 include_directories("${MPI4PY_INCLUDE_DIR}")
 
unchanged:
--- VTK-6.3.0.orig/Parallel/MPI4Py/module.cmake
+++ VTK-6.3.0/Parallel/MPI4Py/module.cmake
@@ -5,8 +5,6 @@ if (VTK_WRAP_PYTHON)
     DEPENDS
       vtkParallelMPI
       vtkPython
-    COMPILE_DEPENDS
-      vtkmpi4py
     EXCLUDE_FROM_TCL_WRAPPING
     EXCLUDE_FROM_JAVA_WRAPPING
     KIT
unchanged:
--- VTK-6.3.0.orig/Filters/ParallelMPI/vtkDistributedDataFilter.cxx
+++ VTK-6.3.0/Filters/ParallelMPI/vtkDistributedDataFilter.cxx
@@ -1112,7 +1112,10 @@ vtkDataSet *vtkDistributedDataFilter::Te
   vtkIdType cellsPerNode = numTotalCells / nprocs;
 
   vtkIdList **sendCells = new vtkIdList * [ nprocs ];
-  memset(sendCells, 0, sizeof(vtkIdList *) * nprocs);
+  
+  if (sizeof(vtkIdList *) * nprocs > 0) {
+    memset(sendCells, 0, sizeof(vtkIdList *) * nprocs);
+  }
 
   if (numConsumers == nprocs - 1)
     {
@@ -1597,7 +1600,9 @@ vtkFloatArray **
   // Exchange int arrays
 
   float **recvArrays = new float * [nprocs];
-  memset(recvArrays, 0, sizeof(float *) * nprocs);
+  if (sizeof(float *) * nprocs > 0) {
+    memset(recvArrays, 0, sizeof(float *) * nprocs);
+  }
 
   if (sendSize[me] > 0)  // sent myself an array
     {
@@ -1719,7 +1724,9 @@ vtkIdTypeArray **
   // Exchange int arrays
 
   vtkIdType **recvArrays = new vtkIdType * [nprocs];
-  memset(recvArrays, 0, sizeof(vtkIdType *) * nprocs);
+  if (sizeof(vtkIdType *) * nprocs > 0) {
+    memset(recvArrays, 0, sizeof(vtkIdType *) * nprocs);
+  }
 
   if (sendSize[me] > 0)  // sent myself an array
     {
@@ -2788,7 +2795,9 @@ void vtkDistributedDataFilter::AddConsta
 
   unsigned char *vals = new unsigned char [npoints];
 
-  memset(vals, val, npoints);
+  if (npoints > 0) {
+    memset(vals, val, npoints);
+  }
 
   vtkUnsignedCharArray *Array = vtkUnsignedCharArray::New();
   Array->SetName(arrayName);
@@ -2808,7 +2817,9 @@ void vtkDistributedDataFilter::AddConsta
 
   unsigned char *vals = new unsigned char [ncells];
 
-  memset(vals, val, ncells);
+  if (ncells > 0) {
+    memset(vals, val, ncells);
+  }
 
   vtkUnsignedCharArray *Array = vtkUnsignedCharArray::New();
   Array->SetName(arrayName);
@@ -3007,7 +3018,9 @@ int vtkDistributedDataFilter::AssignGlob
   vtkIdType nGridPoints = grid->GetNumberOfPoints();
 
   vtkIdType *numPointsOutside = new vtkIdType [nprocs];
-  memset(numPointsOutside, 0, sizeof(vtkIdType) * nprocs);
+  if (sizeof(vtkIdType) * nprocs > 0) {
+    memset(numPointsOutside, 0, sizeof(vtkIdType) * nprocs);
+  }
 
   vtkIdTypeArray *globalIds = vtkIdTypeArray::New();
   globalIds->SetNumberOfValues(nGridPoints);
@@ -3089,10 +3102,16 @@ int vtkDistributedDataFilter::AssignGlob
   // global ID back?
 
   vtkFloatArray **ptarrayOut = new vtkFloatArray * [nprocs];
-  memset(ptarrayOut, 0, sizeof(vtkFloatArray *) * nprocs);
+  
+  if (sizeof(vtkFloatArray *) * nprocs > 0) {
+    memset(ptarrayOut, 0, sizeof(vtkFloatArray *) * nprocs);
+  }
 
   vtkIdTypeArray **localIds     = new vtkIdTypeArray * [nprocs];
-  memset(localIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  
+  if (sizeof(vtkIdTypeArray *) * nprocs > 0) {
+    memset(localIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  }
 
   vtkIdType *next = new vtkIdType [nprocs];
   vtkIdType *next3 = new vtkIdType [nprocs];
@@ -3267,7 +3286,9 @@ vtkIdTypeArray **vtkDistributedDataFilte
     {
     // There are no cells in my assigned region
 
-    memset(gids, 0, sizeof(vtkIdTypeArray *) * nprocs);
+    if (sizeof(vtkIdTypeArray *) * nprocs > 0) {
+      memset(gids, 0, sizeof(vtkIdTypeArray *) * nprocs);
+    }
 
     return gids;
     }
@@ -3472,7 +3493,10 @@ vtkIdTypeArray **vtkDistributedDataFilte
   std::multimap<int, int>::iterator mapIt;
 
   vtkIdTypeArray **processList = new vtkIdTypeArray * [nprocs];
-  memset(processList, 0, sizeof (vtkIdTypeArray *) * nprocs);
+
+  if (sizeof (vtkIdTypeArray *) * nprocs > 0) {
+    memset(processList, 0, sizeof (vtkIdTypeArray *) * nprocs);
+  }
 
   for (int i=0; i<nprocs; i++)
     {
@@ -3562,7 +3586,9 @@ vtkIdTypeArray **vtkDistributedDataFilte
   vtkIdType numPoints = grid->GetNumberOfPoints();
 
   vtkIdTypeArray **ghostPtIds = new vtkIdTypeArray * [nprocs];
-  memset(ghostPtIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  if (sizeof(vtkIdTypeArray *) * nprocs) {
+    memset(ghostPtIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  }
 
   if (numPoints < 1)
     {
unchanged:
--- VTK-6.3.0.orig/Examples/Infovis/Cxx/CMakeLists.txt
+++ VTK-6.3.0/Examples/Infovis/Cxx/CMakeLists.txt
@@ -26,11 +26,6 @@ if(vtkViewsInfovis_LOADED)
 endif()
 
 # If Qt is enabled include the QT based examples
-if(vtkGUISupportQt_LOADED)
-  add_subdirectory(EasyView)
-  add_subdirectory(CustomLinkView)
-  add_subdirectory(StatsView)
-endif()
 
 if(vtkInfovisParallel_LOADED)
   add_executable(ParallelBFS ParallelBFS.cxx)
unchanged:
--- VTK-6.3.0.orig/IO/GDAL/vtkGDALVectorReader.cxx
+++ VTK-6.3.0/IO/GDAL/vtkGDALVectorReader.cxx
@@ -44,7 +44,11 @@ class vtkGDALVectorReader::Internal
 public:
   Internal( const char* srcName, int srcMode, int appendFeatures, int addFeatIds )
     {
+#if GDAL_VERSION_MAJOR < 2
     this->Source = OGRSFDriverRegistrar::Open( srcName, srcMode, &this->Driver );
+#else
+    this->Source = (GDALDataset*) OGROpen( srcName, srcMode, NULL );
+#endif
     if ( ! this->Source )
       {
       this->LastError = CPLGetLastErrorMsg();
@@ -61,7 +65,11 @@ public:
     {
     if ( this->Source )
       {
+#if GDAL_VERSION_MAJOR < 2
       OGRDataSource::DestroyDataSource( this->Source );
+#else
+      GDALClose( (GDALDatasetH) this->Source );
+#endif
       }
     }
 
@@ -307,7 +315,11 @@ public:
     return nCells;
     }
 
+#if GDAL_VERSION_MAJOR < 2
   OGRDataSource* Source;
+#else
+  GDALDataset* Source;
+#endif
   OGRSFDriver* Driver;
   const char* LastError;
   int LayerIdx;
unchanged:
--- a/CMake/vtkTestFFMPEG.cmake
+++ b/CMake/vtkTestFFMPEG.cmake
@@ -32,8 +32,8 @@
 #include <${FFMEG_CODEC_HEADER_PATH}/avcodec.h>
 int main()
 {
-  img_convert(0, PIX_FMT_RGB24,
-              0, PIX_FMT_RGB24,
+  img_convert(0, AV_PIX_FMT_RGB24,
+              0, AV_PIX_FMT_RGB24,
               0, 0);
   return 0;
 }\n")
unchanged:
--- a/IO/FFMPEG/vtkFFMPEGWriter.cxx
+++ b/IO/FFMPEG/vtkFFMPEGWriter.cxx
@@ -191,11 +191,11 @@
   c->height = this->Dim[1];
   if (this->Writer->GetCompression())
     {
-    c->pix_fmt = PIX_FMT_YUVJ422P;
+    c->pix_fmt = AV_PIX_FMT_YUVJ422P;
     }
   else
     {
-    c->pix_fmt = PIX_FMT_BGR24;
+    c->pix_fmt = AV_PIX_FMT_BGR24;
     }
 
   //to do playback at actual recorded rate, this will need more work see also below
@@ -274,13 +274,13 @@
 #endif
 
   //for the output of the writer's input...
-  this->rgbInput = avcodec_alloc_frame();
+  this->rgbInput = av_frame_alloc();
   if (!this->rgbInput)
     {
     vtkGenericWarningMacro (<< "Could not make rgbInput avframe." );
     return 0;
     }
-  int RGBsize = avpicture_get_size(PIX_FMT_RGB24, c->width, c->height);
+  int RGBsize = avpicture_get_size(AV_PIX_FMT_RGB24, c->width, c->height);
   unsigned char *rgb = (unsigned char *)av_malloc(sizeof(unsigned char) * RGBsize);
   if (!rgb)
     {
@@ -288,10 +288,10 @@
     return 0;
     }
   //The rgb buffer should get deleted when this->rgbInput is.
-  avpicture_fill((AVPicture *)this->rgbInput, rgb, PIX_FMT_RGB24, c->width, c->height);
+  avpicture_fill((AVPicture *)this->rgbInput, rgb, AV_PIX_FMT_RGB24, c->width, c->height);
 
   //and for the output to the codec's input.
-  this->yuvOutput = avcodec_alloc_frame();
+  this->yuvOutput = av_frame_alloc();
   if (!this->yuvOutput)
     {
     vtkGenericWarningMacro (<< "Could not make yuvOutput avframe." );
@@ -349,12 +349,12 @@
   //convert that to YUV for input to the codec
 #ifdef VTK_FFMPEG_HAS_IMG_CONVERT
   img_convert((AVPicture *)this->yuvOutput, cc->pix_fmt,
-              (AVPicture *)this->rgbInput, PIX_FMT_RGB24,
+              (AVPicture *)this->rgbInput, AV_PIX_FMT_RGB24,
               cc->width, cc->height);
 #else
   //convert that to YUV for input to the codec
   SwsContext* convert_ctx = sws_getContext(
-    cc->width, cc->height, PIX_FMT_RGB24,
+    cc->width, cc->height, AV_PIX_FMT_RGB24,
     cc->width, cc->height, cc->pix_fmt,
     SWS_BICUBIC, NULL, NULL, NULL);
 
@@ -447,14 +447,14 @@
   if (this->yuvOutput)
     {
     av_free(this->yuvOutput->data[0]);
-    av_free(this->yuvOutput);
+    av_frame_free(&this->yuvOutput);
     this->yuvOutput = NULL;
     }
 
   if (this->rgbInput)
     {
     av_free(this->rgbInput->data[0]);
-    av_free(this->rgbInput);
+    av_frame_free(&this->rgbInput);
     this->rgbInput = NULL;
     }
 
unchanged:
--- a/Common/Core/vtkAbstractArray.h
+++ b/Common/Core/vtkAbstractArray.h
@@ -384,7 +384,7 @@
   // prominence P, we sample N values, with N = f(T; P, U).
   // We want f to be sublinear in T in order to interactively handle large
   // arrays; in practice, we can make f independent of T:
-  // \f$ N >= \frac{5}{P}\mathrm{ln}\left(\frac{1}{PU}) \f$,
+  // \f$ N >= \frac{5}{P}\mathrm{ln}\left(\frac{1}{PU}\right) \f$,
   // but note that small values of P are costly to achieve.
   // The default parameters will locate prominent values that occur at least
   // 1 out of every 1000 samples with a confidence of 0.999999 (= 1 - 1e6).
unchanged:
--- a/Common/Core/vtkMath.h
+++ b/Common/Core/vtkMath.h
@@ -661,14 +661,14 @@
   // The output is provided by overwriting the input A with a matrix of the same size as
   // A containing all of the information about L and U. If the output matrix is
   // \f$ A* = \left( \begin{array}{cc}
-  // a & b \\ %
+  // a & b \\
   // c & d \end{array} \right)\f$
   // then L and U can be obtained as:
   // \f$ L = \left( \begin{array}{cc}
-  // 1 & 0 \\ %
+  // 1 & 0 \\
   // c & 1 \end{array} \right)\f$
   // \f$ U = \left( \begin{array}{cc}
-  // a & b \\ %
+  // a & b \\
   // 0 & d \end{array} \right)\f$
   //
   // That is, the diagonal of the resulting A* is the diagonal of U. The upper right
unchanged:
--- VTK-6.3.0.orig/Wrapping/Java/CMakeLists.txt
+++ VTK-6.3.0/Wrapping/Java/CMakeLists.txt
@@ -80,6 +80,8 @@ if(APPLE)
   set(JAVAC_OPTIONS -J-Xmx512m)
 endif()
 
+set(JAVAC_OPTIONS -J-Xmx1024m)
+
 get_property(java_modules GLOBAL PROPERTY VTK_JAVA_WRAPPED)
 foreach(module IN LISTS java_modules)
   if(NOT ${module}_EXCLUDE_FROM_WRAPPING)
unchanged:
--- VTK-6.3.0.orig/CMake/vtkJavaWrapping.cmake
+++ VTK-6.3.0/CMake/vtkJavaWrapping.cmake
@@ -79,7 +79,7 @@ function(vtk_add_java_wrapping module_na
     install(TARGETS ${module_name}Java
       EXPORT ${VTK_INSTALL_EXPORT_NAME}
       RUNTIME DESTINATION ${VTK_INSTALL_RUNTIME_DIR} COMPONENT RuntimeLibraries
-      LIBRARY DESTINATION ${VTK_INSTALL_LIBRARY_DIR} COMPONENT RuntimeLibraries
+      LIBRARY DESTINATION ${VTK_INSTALL_LIBRARY_DIR}/jni COMPONENT RuntimeLibraries
       ARCHIVE DESTINATION ${VTK_INSTALL_ARCHIVE_DIR} COMPONENT Development)
   endif()
 endfunction()
unchanged:
--- VTK-6.3.0.orig/CMakeLists.txt
+++ VTK-6.3.0/CMakeLists.txt
@@ -207,7 +207,7 @@ else()
 endif()
 
 # default to not using the system GLEW as ours has fixes in it right now
-set(VTK_USE_SYSTEM_GLEW OFF CACHE BOOL "do not use a system glew" FORCE)
+set(VTK_USE_SYSTEM_GLEW OFF CACHE BOOL "do not use a system glew" ON)
 
 set(VTK_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS})
 
unchanged:
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -546,9 +546,7 @@
 
 # The doxygen documentation needs to be aware of all modules.
 option(BUILD_DOCUMENTATION "Build the VTK documentation" OFF)
-if(BUILD_DOCUMENTATION)
-  add_subdirectory(Utilities/Doxygen)
-endif()
+add_subdirectory(Utilities/Doxygen)
 
 # If python wrapping and testing is enabled then add driver scripts to run
 # tests.  Note: Many pythong tests used to be automatically converted from TCL
unchanged:
--- b/Utilities/Doxygen/CMakeLists.txt
+++ b/Utilities/Doxygen/CMakeLists.txt
@@ -1,69 +1,79 @@
 #
 # Build the documentation
 #
-find_package(Doxygen REQUIRED)
-find_package(Perl REQUIRED)
-find_package(HTMLHelp)
+if (BUILD_DOCUMENTATION) 
+  find_package(Doxygen REQUIRED)
+  find_package(Perl REQUIRED)
+  find_package(HTMLHelp)
 
-option(DOXYGEN_SHORT_NAMES "Build Doxygen of VTK using short file names" OFF)
-option(DOXYGEN_KEEP_TEMP "Do not delete the temporary Doxygen headers" OFF)
-option(DOXYGEN_GENERATE_HTMLHELP "Generate HTML help (CHM) files" ON)
-mark_as_advanced(DOXYGEN_SHORT_NAMES DOXYGEN_KEEP_TEMP DOXYGEN_GENERATE_HTMLHELP)
-if(DOXYGEN_SHORT_NAMES)
-  set(DOXYGEN_SHORT_NAMES YES)
-else()
-  set(DOXYGEN_SHORT_NAMES NO)
-endif()
-if(DOXYGEN_GENERATE_HTMLHELP)
-  set(DOXYGEN_GENERATE_HTMLHELP YES)
-else()
-  set(DOXYGEN_GENERATE_HTMLHELP NO)
-endif()
-
-#
-# Configure the script and the doxyfile, then add target
-#
-set(HAVE_DOT_YESNO NO)
-if(DOT)
-  set(HAVE_DOT_YESNO YES)
-  if(NOT DOT_PATH)
-    get_filename_component(DOT_PATH ${DOT} PATH)
+  option(DOXYGEN_SHORT_NAMES "Build Doxygen of VTK using short file names" OFF)
+  option(DOXYGEN_KEEP_TEMP "Do not delete the temporary Doxygen headers" OFF)
+  option(DOXYGEN_GENERATE_HTMLHELP "Generate HTML help (CHM) files" ON)
+  mark_as_advanced(DOXYGEN_SHORT_NAMES DOXYGEN_KEEP_TEMP DOXYGEN_GENERATE_HTMLHELP)
+  if(DOXYGEN_SHORT_NAMES)
+    set(DOXYGEN_SHORT_NAMES YES)
+  else()
+    set(DOXYGEN_SHORT_NAMES NO)
   endif()
-endif()
-
-# Build up a list of all module source directories. Note that this should be
-# all source directories and so does not use the normal variables.
-unset(VTK_MODULE_DIRS_DOXYGEN)
-file(GLOB src RELATIVE "${VTK_SOURCE_DIR}" "${VTK_SOURCE_DIR}/*/*/module.cmake")
-foreach(module ${src})
-  get_filename_component(module_BASE ${module} PATH)
-  if("${module_BASE}" MATCHES "^Utilities" OR ${module_BASE} MATCHES "^Third")
-    # Skip the utilities and third parties directories.
+  if(DOXYGEN_GENERATE_HTMLHELP)
+    set(DOXYGEN_GENERATE_HTMLHELP YES)
   else()
-    # Use both the source and binary directories, this ensures that
-    # generated files will be included, but they may then be architecture,
-    # build configuration and/or compiler specific. All source directories
-    # are included whether the module is enabled or not.
-    set(VTK_MODULE_DIRS_DOXYGEN
-      "${VTK_MODULE_DIRS_DOXYGEN}
+    set(DOXYGEN_GENERATE_HTMLHELP NO)
+  endif()
+  
+  #
+  # Configure the script and the doxyfile, then add target
+  #
+  set(HAVE_DOT_YESNO NO)
+  if(DOT)
+    set(HAVE_DOT_YESNO YES)
+    if(NOT DOT_PATH)
+      get_filename_component(DOT_PATH ${DOT} PATH)
+    endif()
+  endif()
+  
+  # Build up a list of all module source directories. Note that this should be
+  # all source directories and so does not use the normal variables.
+  unset(VTK_MODULE_DIRS_DOXYGEN)
+  file(GLOB src RELATIVE "${VTK_SOURCE_DIR}" "${VTK_SOURCE_DIR}/*/*/module.cmake")
+  foreach(module ${src})
+    get_filename_component(module_BASE ${module} PATH)
+    if("${module_BASE}" MATCHES "^Utilities" OR ${module_BASE} MATCHES "^Third")
+      # Skip the utilities and third parties directories.
+    else()
+      # Use both the source and binary directories, this ensures that
+      # generated files will be included, but they may then be architecture,
+      # build configuration and/or compiler specific. All source directories
+      # are included whether the module is enabled or not.
+      set(VTK_MODULE_DIRS_DOXYGEN
+	"${VTK_MODULE_DIRS_DOXYGEN}
   \"${VTK_SOURCE_DIR}/${module_BASE}\"
   \"${VTK_BINARY_DIR}/${module_BASE}\"")
-  endif()
-endforeach()
+    endif()
+  endforeach()
+  
+  FIND_PATH(MATHJAX_CODEFILE MathJax.js
+    PATHS
+    /usr/share/mathjax/
+    /usr/share/javascript/
+    /usr/share/javascript/mathjax/
+    )
+  
+  configure_file(
+    ${VTK_SOURCE_DIR}/Utilities/Doxygen/doxyfile.in
+    ${VTK_BINARY_DIR}/Utilities/Doxygen/doxyfile)
+  
+  configure_file(
+    ${VTK_SOURCE_DIR}/Utilities/Doxygen/doc_makeall.cmake.in
+    ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
+    @ONLY)
+  
+  add_custom_target(DoxygenDoc
+    ${CMAKE_COMMAND}
+    -P ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
+    DEPENDS ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake)
 
-configure_file(
-  ${VTK_SOURCE_DIR}/Utilities/Doxygen/doxyfile.in
-  ${VTK_BINARY_DIR}/Utilities/Doxygen/doxyfile)
-
-configure_file(
-  ${VTK_SOURCE_DIR}/Utilities/Doxygen/doc_makeall.cmake.in
-  ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
-  @ONLY)
-
-add_custom_target(DoxygenDoc
-  ${CMAKE_COMMAND}
-  -P ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
-  DEPENDS ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake)
+endif()
 
 if(NOT VTK_INSTALL_NO_DOCUMENTATION)
   macro(__vtk_install_documentation_files glob)
unchanged:
--- a/ThirdParty/xdmf2/vtkxdmf2/libsrc/XdmfH5Driver.cxx
+++ b/ThirdParty/xdmf2/vtkxdmf2/libsrc/XdmfH5Driver.cxx
@@ -139,7 +139,11 @@
 #if (H5_VERS_MAJOR>1)||((H5_VERS_MAJOR==1)&&(H5_VERS_MINOR>=8))
 static haddr_t H5FD_dsm_get_eoa(const H5FD_t *_file, H5FD_mem_t type);
 static herr_t H5FD_dsm_set_eoa(H5FD_t *_file, H5FD_mem_t type, haddr_t addr);
+#if (H5_VERS_MAJOR>1)||((H5_VERS_MAJOR==1)&&(H5_VERS_MINOR>=10))
+static haddr_t H5FD_dsm_get_eof(const H5FD_t *_file, H5FD_mem_t type);
+#else
 static haddr_t H5FD_dsm_get_eof(const H5FD_t *_file);
+#endif
 #else
 static haddr_t H5FD_dsm_get_eoa(H5FD_t *_file);
 static herr_t H5FD_dsm_set_eoa(H5FD_t *_file, haddr_t addr);
@@ -155,6 +159,9 @@
     "dsm",                      /*name          */
     MAXADDR,                    /*maxaddr       */
     H5F_CLOSE_WEAK,             /*fc_degree     */
+#if (H5_VERS_MAJOR>1)||((H5_VERS_MAJOR==1)&&(H5_VERS_MINOR>=8))
+    NULL,                       /* terminate    */
+#endif
     NULL,                       /*sb_size       */
     NULL,                       /*sb_encode     */
     NULL,                       /*sb_decode     */
@@ -687,7 +694,9 @@
  *-------------------------------------------------------------------------
  */
 static haddr_t
-#if (H5_VERS_MAJOR>1)||((H5_VERS_MAJOR==1)&&(H5_VERS_MINOR>=8))
+#if (H5_VERS_MAJOR>1)||((H5_VERS_MAJOR==1)&&(H5_VERS_MINOR>=10))
+H5FD_dsm_get_eof(const H5FD_t *_file, H5FD_mem_t type)
+#elif (H5_VERS_MAJOR>1)||((H5_VERS_MAJOR==1)&&(H5_VERS_MINOR>=8))
 H5FD_dsm_get_eof(const H5FD_t *_file)
 #else
 H5FD_dsm_get_eof(H5FD_t *_file)
unchanged:
--- a/Utilities/Doxygen/doxyfile.in
+++ b/Utilities/Doxygen/doxyfile.in
@@ -19,6 +19,9 @@
 GENERATE_TAGFILE     = "@VTK_BINARY_DIR@/Utilities/Doxygen/vtk@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@.tag"
 
 PDF_HYPERLINKS       = YES
+USE_MATHJAX  = YES
+MATHJAX_RELPATH = @MATHJAX_CODEFILE@
+
 
 HAVE_DOT             = @HAVE_DOT_YESNO@
 DOT_PATH             = "@DOT_PATH@"
unchanged:
--- a/Infovis/Layout/module.cmake
+++ b/Infovis/Layout/module.cmake
@@ -6,6 +6,7 @@
     vtkImagingHybrid
     vtkFiltersModeling
     vtkInfovisCore
+    vtkInfovisBoostGraphAlgorithms
   TEST_DEPENDS
     vtkRenderingLabel
     vtkRendering${VTK_RENDERING_BACKEND}
unchanged:
--- a/Rendering/VolumeOpenGL/CMakeLists.txt
+++ b/Rendering/VolumeOpenGL/CMakeLists.txt
@@ -1,7 +1,6 @@
 include(vtkObjectFactory)
 
 set(Module_SRCS
-  vtkOpenGLHAVSVolumeMapper.cxx
   vtkOpenGLProjectedAAHexahedraMapper.cxx
   vtkOpenGLProjectedTetrahedraMapper.cxx
   vtkOpenGLRayCastImageDisplayHelper.cxx
@@ -45,13 +44,6 @@
   vtkGPUVolumeRayCastMapper_FourComponentsFS.glsl
   vtkGPUVolumeRayCastMapper_NoShadeFS.glsl
   vtkGPUVolumeRayCastMapper_ShadeFS.glsl
-  vtkHAVSVolumeMapper_kbufferVP.asm
-  vtkHAVSVolumeMapper_k2FP.asm
-  vtkHAVSVolumeMapper_k2BeginFP.asm
-  vtkHAVSVolumeMapper_k2EndFP.asm
-  vtkHAVSVolumeMapper_k6FP.asm
-  vtkHAVSVolumeMapper_k6BeginFP.asm
-  vtkHAVSVolumeMapper_k6EndFP.asm
   vtkProjectedAAHexahedraMapper_VS.glsl
   vtkProjectedAAHexahedraMapper_GS.glsl
   vtkProjectedAAHexahedraMapper_FS.glsl
@@ -83,7 +75,6 @@
 
 # Nwo for the object factory.
 set(opengl_overrides
-  HAVSVolumeMapper
   ProjectedAAHexahedraMapper
   ProjectedTetrahedraMapper
   RayCastImageDisplayHelper
unchanged:
--- a/Examples/Infovis/Python/vtklibrary.xml
+++ b/Examples/Infovis/Python/vtklibrary.xml
@@ -2382,10 +2382,6 @@
   <node id="VolumeRendering">
     <node id="vtkUnstructuredGridVolumeMapper">
     </node>
-    <node id="vtkHAVSVolumeMapper">
-    </node>
-    <node id="vtkOpenGLHAVSVolumeMapper">
-    </node>
     <node id="vtkProjectedTetrahedraMapper">
     </node>
     <node id="vtkOpenGLProjectedTetrahedraMapper">
unchanged:
--- a/Examples/Infovis/Python/vtkclasses.xml
+++ b/Examples/Infovis/Python/vtkclasses.xml
@@ -555,10 +555,6 @@
             <class id="vtkAbstractMapper3D" library="Rendering">
                <class id="vtkAbstractVolumeMapper" library="Rendering">
                   <class id="vtkUnstructuredGridVolumeMapper" library="VolumeRendering">
-                     <class id="vtkHAVSVolumeMapper" library="VolumeRendering">
-                        <class id="vtkOpenGLHAVSVolumeMapper" library="VolumeRendering">
-                        </class>
-                     </class>
                      <class id="vtkProjectedTetrahedraMapper" library="VolumeRendering">
                         <class id="vtkOpenGLProjectedTetrahedraMapper" library="VolumeRendering">
                         </class>
unchanged:
--- a/Examples/GUI/Qt/GraphicsView/vtkclasses.xml
+++ b/Examples/GUI/Qt/GraphicsView/vtkclasses.xml
@@ -555,10 +555,6 @@
             <class id="vtkAbstractMapper3D" library="Rendering">
                <class id="vtkAbstractVolumeMapper" library="Rendering">
                   <class id="vtkUnstructuredGridVolumeMapper" library="VolumeRendering">
-                     <class id="vtkHAVSVolumeMapper" library="VolumeRendering">
-                        <class id="vtkOpenGLHAVSVolumeMapper" library="VolumeRendering">
-                        </class>
-                     </class>
                      <class id="vtkProjectedTetrahedraMapper" library="VolumeRendering">
                         <class id="vtkOpenGLProjectedTetrahedraMapper" library="VolumeRendering">
                         </class>
unchanged:
--- a/Examples/GUI/Qt/GraphicsView/vtklibrary.xml
+++ b/Examples/GUI/Qt/GraphicsView/vtklibrary.xml
@@ -2382,10 +2382,6 @@
   <node id="VolumeRendering">
     <node id="vtkUnstructuredGridVolumeMapper">
     </node>
-    <node id="vtkHAVSVolumeMapper">
-    </node>
-    <node id="vtkOpenGLHAVSVolumeMapper">
-    </node>
     <node id="vtkProjectedTetrahedraMapper">
     </node>
     <node id="vtkOpenGLProjectedTetrahedraMapper">
unchanged:
--- a/Rendering/Volume/CMakeLists.txt
+++ b/Rendering/Volume/CMakeLists.txt
@@ -61,7 +61,6 @@
 # only some volume mappers are supported for the OpenGL2 backend
 if(NOT VTK_RENDERING_BACKEND STREQUAL "OpenGL2")
   set(Module_SRCS ${Module_SRCS}
-    vtkHAVSVolumeMapper.cxx
     vtkProjectedAAHexahedraMapper.cxx
     vtkVolumeTextureMapper2D.cxx
     vtkVolumeTextureMapper3D.cxx
unchanged:
--- a/Rendering/Volume/Testing/Cxx/CMakeLists.txt
+++ b/Rendering/Volume/Testing/Cxx/CMakeLists.txt
@@ -38,7 +38,6 @@
   PreIntegrationIncremental.cxx
   PreIntegrationNonIncremental.cxx
   TestGPURayCastCompositeShadeMask.cxx # This test depends on vtkOpenGLExtensionManager
-  TestHAVSVolumeMapper.cxx
   TestProjectedHexahedra.cxx
   TestProp3DFollower.cxx
   TestTM3DLightComponents.cxx
unchanged:
--- vtk6.orig/Rendering/Qt/vtkQtLabelRenderStrategy.cxx
+++ vtk6/Rendering/Qt/vtkQtLabelRenderStrategy.cxx
@@ -13,7 +13,7 @@
 
 =========================================================================*/
 #include "vtkQtLabelRenderStrategy.h"
-
+#include <QPainterPath>
 #include "vtkCoordinate.h"
 #include "vtkImageData.h"
 #include "vtkLabeledDataMapper.h"
unchanged:
--- vtk6.orig/Rendering/Qt/vtkQtStringToImage.cxx
+++ vtk6/Rendering/Qt/vtkQtStringToImage.cxx
@@ -14,7 +14,7 @@
 =========================================================================*/
 
 #include "vtkQtStringToImage.h"
-
+#include <QPainterPath>
 #include "vtkQImageToImageSource.h"
 #include "vtkStdString.h"
 #include "vtkUnicodeString.h"
unchanged:
--- vtk7.orig/Rendering/FreeType/vtkFreeTypeTools.cxx
+++ vtk7/Rendering/FreeType/vtkFreeTypeTools.cxx
@@ -287,8 +287,7 @@
 }
 
 //----------------------------------------------------------------------------
-FT_CALLBACK_DEF(FT_Error)
-vtkFreeTypeToolsFaceRequester(FTC_FaceID face_id,
+static FT_Error vtkFreeTypeToolsFaceRequester(FTC_FaceID face_id,
                               FT_Library lib,
                               FT_Pointer request_data,
                               FT_Face* face)
unchanged:
--- a/Rendering/FreeTypeFontConfig/vtkFontConfigFreeTypeTools.cxx
+++ b/Rendering/FreeTypeFontConfig/vtkFontConfigFreeTypeTools.cxx
@@ -31,8 +31,7 @@ vtkStandardNewMacro(vtkFontConfigFreeTypeTools);
 namespace
 {
 // The FreeType face requester callback:
-FT_CALLBACK_DEF(FT_Error)
-vtkFontConfigFreeTypeToolsFaceRequester(FTC_FaceID face_id,
+static FT_Error vtkFontConfigFreeTypeToolsFaceRequester(FTC_FaceID face_id,
                                         FT_Library lib,
                                         FT_Pointer request_data,
                                         FT_Face* face)
only in patch2:
unchanged:
--- vtk6-6.3.0+dfsg2.orig/Rendering/FreeType/vtkFreeTypeUtilities.cxx
+++ vtk6-6.3.0+dfsg2/Rendering/FreeType/vtkFreeTypeUtilities.cxx
@@ -332,8 +332,7 @@ void vtkFreeTypeUtilities::MapIdToTextPr
 
 //----------------------------------------------------------------------------
 #ifdef VTK_FREETYPE_CACHING_SUPPORTED
-FT_CALLBACK_DEF(FT_Error)
-vtkFreeTypeUtilitiesFaceRequester(FTC_FaceID face_id,
+static FT_Error vtkFreeTypeUtilitiesFaceRequester(FTC_FaceID face_id,
                                   FT_Library lib,
                                   FT_Pointer request_data,
                                   FT_Face* face)
