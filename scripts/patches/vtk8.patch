unchanged:
--- a/CMake/vtkModuleMacros.cmake
+++ b/CMake/vtkModuleMacros.cmake
@@ -417,8 +417,8 @@
 function(vtk_target_name _name)
   get_property(_type TARGET ${_name} PROPERTY TYPE)
   if(NOT "${_type}" STREQUAL EXECUTABLE AND NOT VTK_JAVA_INSTALL)
-    set_property(TARGET ${_name} PROPERTY VERSION 1)
-    set_property(TARGET ${_name} PROPERTY SOVERSION 1)
+    set_property(TARGET ${_name} PROPERTY VERSION ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}p.${VTK_BUILD_VERSION})
+    set_property(TARGET ${_name} PROPERTY SOVERSION ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}p)
   endif()
   if("${_name}" MATCHES "^[Vv][Tt][Kk]")
     set(_vtk "")
unchanged:
--- a/Rendering/Tk/CMakeLists.txt
+++ b/Rendering/Tk/CMakeLists.txt
@@ -118,7 +118,7 @@
     vtk_target_install(vtkRenderingPythonTkWidgets)
 
     set_property(TARGET vtkRenderingPythonTkWidgets PROPERTY OUTPUT_NAME
-         vtkRenderingPythonTkWidgets-${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION})
+         vtkRenderingPythonTkWidgets)
 
     set(Module_PYTHON_LIBS ${VTK_TK_LIBRARIES})
     if(VTK_USE_X)
unchanged:
--- a/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.h
+++ b/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.h
@@ -156,6 +156,10 @@
    * to implement IsAvailable.
    */
   static Availability CheckMPLAvailability();
+  static void DisableMPL()
+    {
+    MPLMathTextAvailable = UNAVAILABLE;
+    };
 
   //@{
   /**
unchanged:
--- a/Filters/ParallelMPI/vtkDistributedDataFilter.cxx
+++ b/Filters/ParallelMPI/vtkDistributedDataFilter.cxx
@@ -1206,7 +1206,10 @@
   vtkIdType cellsPerNode = numTotalCells / nprocs;
 
   vtkIdList **sendCells = new vtkIdList * [ nprocs ];
-  memset(sendCells, 0, sizeof(vtkIdList *) * nprocs);
+  
+  if (sizeof(vtkIdList *) * nprocs > 0) {
+    memset(sendCells, 0, sizeof(vtkIdList *) * nprocs);
+  }
 
   if (numConsumers == nprocs - 1)
   {
@@ -1700,7 +1703,9 @@
   // Exchange int arrays
 
   float **recvArrays = new float * [nprocs];
-  memset(recvArrays, 0, sizeof(float *) * nprocs);
+  if (sizeof(float *) * nprocs > 0) {
+    memset(recvArrays, 0, sizeof(float *) * nprocs);
+  }
 
   if (sendSize[me] > 0)  // sent myself an array
   {
@@ -1822,7 +1827,9 @@
   // Exchange int arrays
 
   vtkIdType **recvArrays = new vtkIdType * [nprocs];
-  memset(recvArrays, 0, sizeof(vtkIdType *) * nprocs);
+  if (sizeof(vtkIdType *) * nprocs > 0) {
+    memset(recvArrays, 0, sizeof(vtkIdType *) * nprocs);
+  }
 
   if (sendSize[me] > 0)  // sent myself an array
   {
@@ -2938,7 +2945,9 @@
   if (npoints)
   {
     unsigned char *vals = new unsigned char [npoints];
-    memset(vals, val, npoints);
+    if (npoints > 0) {
+      memset(vals, val, npoints);
+    }
 
     Array->SetArray(vals, npoints, 0,
       vtkUnsignedCharArray::VTK_DATA_ARRAY_DELETE);
@@ -2960,7 +2969,9 @@
   if (ncells)
   {
     unsigned char *vals = new unsigned char [ncells];
-    memset(vals, val, ncells);
+    if (ncells > 0) {
+      memset(vals, val, ncells);
+    }
 
     Array->SetArray(vals, ncells, 0, vtkUnsignedCharArray::VTK_DATA_ARRAY_DELETE);
   }
@@ -3167,7 +3178,9 @@
   vtkIdType nGridPoints = grid->GetNumberOfPoints();
 
   vtkIdType *numPointsOutside = new vtkIdType [nprocs];
-  memset(numPointsOutside, 0, sizeof(vtkIdType) * nprocs);
+  if (sizeof(vtkIdType) * nprocs > 0) {
+    memset(numPointsOutside, 0, sizeof(vtkIdType) * nprocs);
+  }
 
   vtkIdTypeArray *globalIds = vtkIdTypeArray::New();
   globalIds->SetNumberOfValues(nGridPoints);
@@ -3249,10 +3262,16 @@
   // global ID back?
 
   vtkFloatArray **ptarrayOut = new vtkFloatArray * [nprocs];
-  memset(ptarrayOut, 0, sizeof(vtkFloatArray *) * nprocs);
+  
+  if (sizeof(vtkFloatArray *) * nprocs > 0) {
+    memset(ptarrayOut, 0, sizeof(vtkFloatArray *) * nprocs);
+  }
 
   vtkIdTypeArray **localIds     = new vtkIdTypeArray * [nprocs];
-  memset(localIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  
+  if (sizeof(vtkIdTypeArray *) * nprocs > 0) {
+    memset(localIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  }
 
   vtkIdType *next = new vtkIdType [nprocs];
   vtkIdType *next3 = new vtkIdType [nprocs];
@@ -3430,7 +3449,9 @@
   {
     // There are no cells in my assigned region
 
-    memset(gids, 0, sizeof(vtkIdTypeArray *) * nprocs);
+    if (sizeof(vtkIdTypeArray *) * nprocs > 0) {
+      memset(gids, 0, sizeof(vtkIdTypeArray *) * nprocs);
+    }
 
     return gids;
   }
@@ -3641,7 +3662,10 @@
   std::multimap<int, int>::iterator mapIt;
 
   vtkIdTypeArray **processList = new vtkIdTypeArray * [nprocs];
-  memset(processList, 0, sizeof (vtkIdTypeArray *) * nprocs);
+
+  if (sizeof (vtkIdTypeArray *) * nprocs > 0) {
+    memset(processList, 0, sizeof (vtkIdTypeArray *) * nprocs);
+  }
 
   for (int i=0; i<nprocs; i++)
   {
@@ -3734,7 +3758,9 @@
   vtkIdType numPoints = grid->GetNumberOfPoints();
 
   vtkIdTypeArray **ghostPtIds = new vtkIdTypeArray * [nprocs];
-  memset(ghostPtIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  if (sizeof(vtkIdTypeArray *) * nprocs) {
+    memset(ghostPtIds, 0, sizeof(vtkIdTypeArray *) * nprocs);
+  }
 
   if (numPoints < 1)
   {
unchanged:
--- VTK-6.3.0.orig/Wrapping/Java/CMakeLists.txt
+++ VTK-6.3.0/Wrapping/Java/CMakeLists.txt
@@ -80,6 +80,8 @@ if(APPLE)
   set(JAVAC_OPTIONS -J-Xmx512m)
 endif()
 
+set(JAVAC_OPTIONS -J-Xmx1024m)
+
 get_property(java_modules GLOBAL PROPERTY VTK_JAVA_WRAPPED)
 foreach(module IN LISTS java_modules)
   if(NOT ${module}_EXCLUDE_FROM_WRAPPING)
unchanged:
--- VTK-6.3.0.orig/CMake/vtkJavaWrapping.cmake
+++ VTK-6.3.0/CMake/vtkJavaWrapping.cmake
@@ -79,7 +79,7 @@ function(vtk_add_java_wrapping module_na
     install(TARGETS ${module_name}Java
       EXPORT ${VTK_INSTALL_EXPORT_NAME}
       RUNTIME DESTINATION ${VTK_INSTALL_RUNTIME_DIR} COMPONENT RuntimeLibraries
-      LIBRARY DESTINATION ${VTK_INSTALL_LIBRARY_DIR} COMPONENT RuntimeLibraries
+      LIBRARY DESTINATION ${VTK_INSTALL_LIBRARY_DIR}/jni COMPONENT RuntimeLibraries
       ARCHIVE DESTINATION ${VTK_INSTALL_ARCHIVE_DIR} COMPONENT Development)
   endif()
 endfunction()
unchanged:
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -540,9 +540,7 @@
 
 # The doxygen documentation needs to be aware of all modules.
 option(BUILD_DOCUMENTATION "Build the VTK documentation" OFF)
-if(BUILD_DOCUMENTATION)
-  add_subdirectory(Utilities/Doxygen)
-endif()
+add_subdirectory(Utilities/Doxygen)
 
 # If python wrapping and testing is enabled then add driver scripts to run
 # tests.  Note: Many pythong tests used to be automatically converted from TCL
unchanged:
--- b/Utilities/Doxygen/CMakeLists.txt
+++ b/Utilities/Doxygen/CMakeLists.txt
@@ -1,69 +1,79 @@
 #
 # Build the documentation
 #
-find_package(Doxygen REQUIRED)
-find_package(Perl REQUIRED)
-find_package(HTMLHelp)
+if (BUILD_DOCUMENTATION) 
+  find_package(Doxygen REQUIRED)
+  find_package(Perl REQUIRED)
+  find_package(HTMLHelp)
 
-option(DOXYGEN_SHORT_NAMES "Build Doxygen of VTK using short file names" OFF)
-option(DOXYGEN_KEEP_TEMP "Do not delete the temporary Doxygen headers" OFF)
-option(DOXYGEN_GENERATE_HTMLHELP "Generate HTML help (CHM) files" ON)
-mark_as_advanced(DOXYGEN_SHORT_NAMES DOXYGEN_KEEP_TEMP DOXYGEN_GENERATE_HTMLHELP)
-if(DOXYGEN_SHORT_NAMES)
-  set(DOXYGEN_SHORT_NAMES YES)
-else()
-  set(DOXYGEN_SHORT_NAMES NO)
-endif()
-if(DOXYGEN_GENERATE_HTMLHELP)
-  set(DOXYGEN_GENERATE_HTMLHELP YES)
-else()
-  set(DOXYGEN_GENERATE_HTMLHELP NO)
-endif()
-
-#
-# Configure the script and the doxyfile, then add target
-#
-set(HAVE_DOT_YESNO NO)
-if(DOT)
-  set(HAVE_DOT_YESNO YES)
-  if(NOT DOT_PATH)
-    get_filename_component(DOT_PATH ${DOT} PATH)
+  option(DOXYGEN_SHORT_NAMES "Build Doxygen of VTK using short file names" OFF)
+  option(DOXYGEN_KEEP_TEMP "Do not delete the temporary Doxygen headers" OFF)
+  option(DOXYGEN_GENERATE_HTMLHELP "Generate HTML help (CHM) files" ON)
+  mark_as_advanced(DOXYGEN_SHORT_NAMES DOXYGEN_KEEP_TEMP DOXYGEN_GENERATE_HTMLHELP)
+  if(DOXYGEN_SHORT_NAMES)
+    set(DOXYGEN_SHORT_NAMES YES)
+  else()
+    set(DOXYGEN_SHORT_NAMES NO)
   endif()
-endif()
-
-# Build up a list of all module source directories. Note that this should be
-# all source directories and so does not use the normal variables.
-unset(VTK_MODULE_DIRS_DOXYGEN)
-file(GLOB src RELATIVE "${VTK_SOURCE_DIR}" "${VTK_SOURCE_DIR}/*/*/module.cmake")
-foreach(module ${src})
-  get_filename_component(module_BASE ${module} PATH)
-  if("${module_BASE}" MATCHES "^Utilities" OR ${module_BASE} MATCHES "^Third")
-    # Skip the utilities and third parties directories.
+  if(DOXYGEN_GENERATE_HTMLHELP)
+    set(DOXYGEN_GENERATE_HTMLHELP YES)
   else()
-    # Use both the source and binary directories, this ensures that
-    # generated files will be included, but they may then be architecture,
-    # build configuration and/or compiler specific. All source directories
-    # are included whether the module is enabled or not.
-    set(VTK_MODULE_DIRS_DOXYGEN
-      "${VTK_MODULE_DIRS_DOXYGEN}
+    set(DOXYGEN_GENERATE_HTMLHELP NO)
+  endif()
+  
+  #
+  # Configure the script and the doxyfile, then add target
+  #
+  set(HAVE_DOT_YESNO NO)
+  if(DOT)
+    set(HAVE_DOT_YESNO YES)
+    if(NOT DOT_PATH)
+      get_filename_component(DOT_PATH ${DOT} PATH)
+    endif()
+  endif()
+  
+  # Build up a list of all module source directories. Note that this should be
+  # all source directories and so does not use the normal variables.
+  unset(VTK_MODULE_DIRS_DOXYGEN)
+  file(GLOB src RELATIVE "${VTK_SOURCE_DIR}" "${VTK_SOURCE_DIR}/*/*/module.cmake")
+  foreach(module ${src})
+    get_filename_component(module_BASE ${module} PATH)
+    if("${module_BASE}" MATCHES "^Utilities" OR ${module_BASE} MATCHES "^Third")
+      # Skip the utilities and third parties directories.
+    else()
+      # Use both the source and binary directories, this ensures that
+      # generated files will be included, but they may then be architecture,
+      # build configuration and/or compiler specific. All source directories
+      # are included whether the module is enabled or not.
+      set(VTK_MODULE_DIRS_DOXYGEN
+	"${VTK_MODULE_DIRS_DOXYGEN}
   \"${VTK_SOURCE_DIR}/${module_BASE}\"
   \"${VTK_BINARY_DIR}/${module_BASE}\"")
-  endif()
-endforeach()
+    endif()
+  endforeach()
+  
+  FIND_PATH(MATHJAX_CODEFILE MathJax.js
+    PATHS
+    /usr/share/mathjax/
+    /usr/share/javascript/
+    /usr/share/javascript/mathjax/
+    )
+  
+  configure_file(
+    ${VTK_SOURCE_DIR}/Utilities/Doxygen/doxyfile.in
+    ${VTK_BINARY_DIR}/Utilities/Doxygen/doxyfile)
+  
+  configure_file(
+    ${VTK_SOURCE_DIR}/Utilities/Doxygen/doc_makeall.cmake.in
+    ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
+    @ONLY)
+  
+  add_custom_target(DoxygenDoc
+    ${CMAKE_COMMAND}
+    -P ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
+    DEPENDS ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake)
 
-configure_file(
-  ${VTK_SOURCE_DIR}/Utilities/Doxygen/doxyfile.in
-  ${VTK_BINARY_DIR}/Utilities/Doxygen/doxyfile)
-
-configure_file(
-  ${VTK_SOURCE_DIR}/Utilities/Doxygen/doc_makeall.cmake.in
-  ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
-  @ONLY)
-
-add_custom_target(DoxygenDoc
-  ${CMAKE_COMMAND}
-  -P ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake
-  DEPENDS ${VTK_BINARY_DIR}/Utilities/Doxygen/doc_makeall.cmake)
+endif()
 
 if(NOT VTK_INSTALL_NO_DOCUMENTATION)
   macro(__vtk_install_documentation_files glob)
unchanged:
--- a/Utilities/Doxygen/doxyfile.in
+++ b/Utilities/Doxygen/doxyfile.in
@@ -19,6 +19,9 @@
 GENERATE_TAGFILE     = "@VTK_BINARY_DIR@/Utilities/Doxygen/vtk@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@.tag"
 
 PDF_HYPERLINKS       = YES
+USE_MATHJAX  = YES
+MATHJAX_RELPATH = @MATHJAX_CODEFILE@
+
 
 HAVE_DOT             = @HAVE_DOT_YESNO@
 DOT_PATH             = "@DOT_PATH@"
unchanged:
--- a/Wrapping/Java/CMakeLists.txt
+++ b/Wrapping/Java/CMakeLists.txt
@@ -259,7 +259,7 @@
   if(VTK_JAVA_SWT_COMPONENT)
     set(VTK_JAVA_SAMPLE_DEPENDENCIES ${VTK_JAVA_SAMPLE_DEPENDENCIES}
       rendering/SwtConeRendering
-    )
+q    )
   endif()
 endif()
 
@@ -358,11 +358,10 @@
   COMMENT "Compiling Java Classes"
   )
 
-# Create the JAR file containing all compiled classes and
+
 add_custom_command(
-  COMMAND ${JAVA_ARCHIVE} -cvf  "${VTK_JAR_PATH}/vtk.jar"
-  -C ${VTK_BINARY_DIR}/java
-  vtk
+  COMMAND cd ${VTK_BINARY_DIR}/java && find . -name "*.class" -print | sort -u > classes.list
+  COMMAND cd ${VTK_BINARY_DIR}/java && ${JAVA_ARCHIVE} -cvf  "${VTK_JAR_PATH}/vtk.jar" @${VTK_BINARY_DIR}/java/classes.list
   DEPENDS ${VTK_BINARY_DIR}/java/javac_stamp.txt ${JAVA_LIBRARIES}
   OUTPUT ${VTK_JAR_PATH}/vtk.jar
   COMMENT "Java Archive"
unchanged:
--- a/Wrapping/PythonCore/vtkPythonArgs.cxx
+++ b/Wrapping/PythonCore/vtkPythonArgs.cxx
@@ -102,7 +102,7 @@ bool vtkPythonGetStringValue(PyObject *o, T *&a, const char *exctext)
   else if (PyUnicode_Check(o))
   {
 #if PY_VERSION_HEX >= 0x03030000
-    a = PyUnicode_AsUTF8(o);
+    a = const_cast<char*>(PyUnicode_AsUTF8(o));
     return true;
 #else
     PyObject *s = _PyUnicode_AsDefaultEncodedString(o, NULL);
unchanged:
--- a/Utilities/Doxygen/doc_class2example.pl
+++ b/Utilities/Doxygen/doc_class2example.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2004-06-09 11:12:38 barre>
 #
 # Build cross-references between classes and examples
unchanged:
--- a/Utilities/Doxygen/doc_cleanhtml.pl
+++ b/Utilities/Doxygen/doc_cleanhtml.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2002-10-25 20:17:59 barre>
 #
 # Clean the HTML generated by Doxygen to remove some layout quicks
unchanged:
--- a/Utilities/Doxygen/doc_codematch.pl
+++ b/Utilities/Doxygen/doc_codematch.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2002-01-18 16:17:26 barre>
 #
 # Summary ?
unchanged:
--- a/Utilities/Doxygen/doc_contributors.pl
+++ b/Utilities/Doxygen/doc_contributors.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2002-11-01 15:33:04 barre>
 #
 # Get author and contributors.
unchanged:
--- a/Utilities/Doxygen/doc_header2doxygen.pl
+++ b/Utilities/Doxygen/doc_header2doxygen.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2011-01-16 21:15:53 barre>
 #
 # Convert VTK headers to doxygen format
unchanged:
--- a/Utilities/Doxygen/doc_index.pl
+++ b/Utilities/Doxygen/doc_index.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2001-11-21 17:40:48 barre>
 #
 # Build full-text index
unchanged:
--- a/Utilities/Doxygen/doc_rmpath.pl
+++ b/Utilities/Doxygen/doc_rmpath.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2001-10-05 11:49:40 barre>
 #
 # Remove path to intermediate Doxygen dir from html doc
unchanged:
--- a/Utilities/Doxygen/doc_version.pl
+++ b/Utilities/Doxygen/doc_version.pl
@@ -1,4 +1,4 @@
-#!/usr/bin/env perl
+#!/usr/bin/perl
 # Time-stamp: <2006-11-15 13:25:02 barre>
 #
 # Extract VTK version and add it to documentation
unchanged:
--- vtk7-7.1.1+dfsg1.orig/Utilities/KWIML/vtkkwiml/include/kwiml/abi.h
+++ vtk7-7.1.1+dfsg1/Utilities/KWIML/vtkkwiml/include/kwiml/abi.h
@@ -467,6 +467,10 @@ suppression macro KWIML_ABI_NO_VERIFY wa
 #elif defined(__XTENSA_EL__)
 # define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_LITTLE
 
+/* RISC-V */
+#elif defined(__riscv) || defined(__riscv__)
+# define KWIML_ABI_ENDIAN_ID KWIML_ABI_ENDIAN_ID_LITTLE 
+
 /* Unknown CPU */
 #elif !defined(KWIML_ABI_NO_ERROR_ENDIAN)
 # error "Byte order of target CPU unknown."
unchanged:
--- a/Wrapping/Python/vtkmodules/numpy_interface/algorithms.py
+++ b/Wrapping/Python/vtkmodules/numpy_interface/algorithms.py
@@ -197,7 +197,7 @@
                 return dsa.NoneArray;
 
             if res is dsa.NoneArray:
-                if max_dims is 1:
+                if max_dims == 1:
                     # Weird trick to make the array look like a scalar
                     max_dims = ()
                 res = numpy.empty(max_dims)
unchanged:
--- a/CMake/VTKGenerateExportHeader.cmake
+++ b/CMake/VTKGenerateExportHeader.cmake
@@ -174,7 +174,7 @@
     execute_process(COMMAND ${CMAKE_C_COMPILER} --version
       OUTPUT_VARIABLE _gcc_version_info
       ERROR_VARIABLE _gcc_version_info)
-    string(REGEX MATCH "[3-9]\\.[0-9]\\.[0-9]*"
+    string(REGEX MATCH "[0-9]*\\.[0-9]\\.[0-9]*"
       _gcc_version "${_gcc_version_info}")
     # gcc on mac just reports: "gcc (GCC) 3.3 20030304 ..." without the
     # patch level, handle this here:
unchanged:
--- a/IO/MySQL/vtkMySQLDatabasePrivate.h
+++ b/IO/MySQL/vtkMySQLDatabasePrivate.h
@@ -7,6 +7,10 @@
 
 #include "vtkIOMySQLModule.h" // For export macro
 #include <mysql.h> // needed for MYSQL typedefs
+#if !defined(MARIADB_BASE_VERSION) && !defined(MARIADB_VERSION_ID) && \
+  MYSQL_VERSION_ID >= 80001 && MYSQL_VERSION_ID != 80002
+typedef bool my_bool;
+#endif
 
 class VTKIOMYSQL_EXPORT vtkMySQLDatabasePrivate
 {
unchanged:
--- vtk7.orig/Rendering/FreeType/vtkFreeTypeTools.cxx
+++ vtk7/Rendering/FreeType/vtkFreeTypeTools.cxx
@@ -273,8 +273,7 @@
 }
 
 //----------------------------------------------------------------------------
-FT_CALLBACK_DEF(FT_Error)
-vtkFreeTypeToolsFaceRequester(FTC_FaceID face_id,
+static FT_Error vtkFreeTypeToolsFaceRequester(FTC_FaceID face_id,
                               FT_Library lib,
                               FT_Pointer request_data,
                               FT_Face* face)
unchanged:
--- a/Rendering/FreeTypeFontConfig/vtkFontConfigFreeTypeTools.cxx
+++ b/Rendering/FreeTypeFontConfig/vtkFontConfigFreeTypeTools.cxx
@@ -31,8 +31,7 @@ vtkStandardNewMacro(vtkFontConfigFreeTypeTools);
 namespace
 {
 // The FreeType face requester callback:
-FT_CALLBACK_DEF(FT_Error)
-vtkFontConfigFreeTypeToolsFaceRequester(FTC_FaceID face_id,
+static FT_Error vtkFontConfigFreeTypeToolsFaceRequester(FTC_FaceID face_id,
                                         FT_Library lib,
                                         FT_Pointer request_data,
                                         FT_Face* face)
unchanged:
--- vtk7-7.1.1+dfsg2.orig/Rendering/Label/vtkLabelHierarchyPrivate.h
+++ vtk7-7.1.1+dfsg2/Rendering/Label/vtkLabelHierarchyPrivate.h
@@ -66,7 +66,7 @@
     {
     }
 
-    bool operator () ( const vtkIdType& a, const vtkIdType& b )
+    bool operator () ( const vtkIdType& a, const vtkIdType& b ) const
     {
       if (0 == this->Hierarchy)
       {
unchanged:
--- vtk7-7.1.1+dfsg2.orig/Rendering/Label/vtkLabelHierarchy.cxx
+++ vtk7-7.1.1+dfsg2/Rendering/Label/vtkLabelHierarchy.cxx
@@ -525,7 +525,7 @@
   {
   public:
     bool operator()(const vtkHierarchyNode & a,
-                    const vtkHierarchyNode & b)
+                    const vtkHierarchyNode & b) const
     {
       if (a.Level != b.Level)
       {
only in patch2:
unchanged:
--- a/ThirdParty/exodusII/vtkexodusII/src/ex_create_par.c
+++ b/ThirdParty/exodusII/vtkexodusII/src/ex_create_par.c
@@ -216,5 +216,5 @@ int ex_create_par_int(const char *path, int cmode, int *comp_ws, int *io_ws, MPI
  * Prevent warning in some versions of ranlib(1) because the object
  * file has no symbols.
  */
-const char exodus_unused_symbol_dummy_1;
+const char exodus_unused_symbol_dummy_ex_create_par;
 #endif
only in patch2:
unchanged:
--- a/ThirdParty/exodusII/vtkexodusII/src/ex_open_par.c
+++ b/ThirdParty/exodusII/vtkexodusII/src/ex_open_par.c
@@ -459,5 +459,5 @@ int ex_open_par_int(const char *path, int mode, int *comp_ws, int *io_ws, float
  * Prevent warning in some versions of ranlib(1) because the object
  * file has no symbols.
  */
-const char exodus_unused_symbol_dummy_1;
+const char exodus_unused_symbol_dummy_ex_open_par;
 #endif
