name: ubuntu-defaults

on:
  workflow_dispatch:

jobs:
  
  setup:
    name: Test Ubuntu Defaults
    
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
        
    env:
      CHASTE_TEST_OUTPUT: ${{ github.workspace }}/chaste-test-dir
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup defaults
        uses: ./.github/actions/setup-defaults
        with:
          os: ${{ matrix.os }}
          modules_dir: ${{ github.workspace }}/modules

      - name: Get list of installed packages
        run: dpkg-query --list | tee dpkg_list
      
      - name: Checkout Chaste
        uses: actions/checkout@v3
        with:
          repository: Chaste/Chaste
          path: Chaste
          submodules: recursive

      - name: Make build and test directories
        run: |
          mkdir -p Chaste/build
          mkdir -p ${CHASTE_TEST_OUTPUT}

      - name: Get Chaste commit sha
        working-directory: Chaste/build
        run: echo "CHASTE_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Cache Chaste build
        uses: actions/cache@v2
        id: cache-chaste
        with:
          path: Chaste/build
          key: ${{ matrix.os }}-${{ env.CHASTE_COMMIT }}-${{ hashFiles('dpkg_list') }}

      - name: Configure Chaste
        if: steps.cache-chaste.outputs.cache-hit != 'true'
        working-directory: Chaste/build
        run: cmake -DCMAKE_BUILD_TYPE=Debug ..
          
      - name: Compile Chaste build info
        if: steps.cache-chaste.outputs.cache-hit != 'true'
        working-directory: Chaste/build
        run: cmake --build . --parallel $(nproc) --target TestChasteBuildInfo

      - name: Get Chaste build info
        working-directory: Chaste/build
        run: ctest -j $(nproc) -V -R TestChasteBuildInfo --output-on-failure | tee buildinfo

      - name: Build Continuous test pack
        if: steps.cache-chaste.outputs.cache-hit != 'true'
        working-directory: Chaste/build
        run: cmake --build . --parallel $(nproc) --target Continuous
          
      - name: Run Continuous test pack
        working-directory: Chaste/build
        run: ctest -j $(nproc) -L Continuous --output-on-failure
