name: Portability

on:
  workflow_dispatch:
    inputs:
      chaste_branch:
        description: "Chaste branch"
        required: true
        type: string
        default: "develop"

      image_tag:
        description: "Portability image"
        required: true
        type: string
        default: "jammy.portability-01"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    container:
      image: "chaste/runner:${{ github.event.inputs.image_tag }}"
      env:
        RUNNER_OFF: 1
      options: --user 0

    env:
      CC: gcc
      CXX: g++

    defaults:
      run:
        shell: bash --login -e -o pipefail {0} # login for environment modules
        working-directory: /home/runner

    steps:
      - name: Checkout Chaste/${{ github.event.inputs.chaste_branch }}
        run: |
          su - runner
          git clone --branch ${{ github.event.inputs.chaste_branch }} https://github.com/Chaste/Chaste

      - name: Create load_modules script
        run: |
          su - runner
          cat > load_modules.sh<< EOF
          module use /home/runner/modules/modulefiles
          module load boost petsc_hdf5 sundials vtk xercesc xsd
          EOF

      - name: Configure
        run: |
          su - runner
          source load_modules.sh
          mkdir -p Chaste/build && cd Chaste/build
          cmake -DCMAKE_BUILD_TYPE=Release ..

      - name: TestChasteBuildInfo
        run: |
          su - runner
          source load_modules.sh
          cmake --build . --target TestChasteBuildInfo --parallel $(nproc)
          ctest -V -R TestChasteBuildInfo --output-on-failure

      - name: Build Continuous test pack
        run: |
          su - runner
          source load_modules.sh
          cmake --build . --target Continuous --parallel $(nproc)

      - name: Build Nightly test pack
        run: |
          su - runner
          source load_modules.sh
          cmake --build . --target Nightly --parallel $(nproc)

      - name: Run Continuous test pack
        run: |
          su - runner
          source load_modules.sh
          ctest -j $(nproc) -L Continuous --output-on-failure

      - name: Run Nightly test pack
        run: |
          su - runner
          source load_modules.sh
          ctest -j $(nproc) -L Nightly --output-on-failure
