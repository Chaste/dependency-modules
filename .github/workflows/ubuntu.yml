name: Ubuntu Tests

on:
  workflow_dispatch:

jobs:
  
  setup:
    name: Test on Ubuntu LTS
    
    strategy:
      matrix:
        include:
          - {os: ubuntu-20.04, xsd_ver: 4.0.0, xercesc_ver: 3.2.3, sundials_ver: 5.8.0, boost_ver: 1.79.0, vtk_ver: 9.1.0, petsc_ver: 3.12.4, hdf5_ver: 1.10.4, petsc_arch: linux-gnu}
          - {os: ubuntu-22.04, xsd_ver: 4.0.0, xercesc_ver: 3.2.3, sundials_ver: 5.8.0, boost_ver: 1.79.0, vtk_ver: 9.1.0, petsc_ver: 3.12.4, hdf5_ver: 1.10.4, petsc_arch: linux-gnu}
      fail-fast: false
      
    runs-on: ${{ matrix.os }}
    
    defaults:
      run:
        shell: bash --login -e -o pipefail {0}
        
    env:
      MODULES_DIR: ${{ github.workspace }}/modules
      CHASTE_TEST_OUTPUT: ${{ github.workspace }}/chaste-test-dir
      
    steps:
      - name: Checkout Chaste/dependency-modules repository
        uses: actions/checkout@v3
        with:
          repository: Chaste/dependency-modules
          path: dependency-modules
        
      - name: Install required packages for Ubuntu 20.04
        if: matrix.os == 'ubuntu-20.04'
        working-directory: dependency-modules/scripts
        run: sudo ./setup_ubuntu2004.sh
        
      - name: Install required packages for Ubuntu 22.04
        if: matrix.os == 'ubuntu-22.04'
        working-directory: dependency-modules/scripts
        run: sudo ./setup_ubuntu2204.sh

      - name: Setup modules directory
        run: |
          mkdir -p ${MODULES_DIR}/modulefiles
          echo "module use ${MODULES_DIR}/modulefiles" | sudo tee -a /etc/profile.d/modules.sh
          source /etc/profile.d/modules.sh 
          module avail
          
      #===== XSD
      - name: Install xsd module
        working-directory: dependency-modules/scripts
        run: ./install_xsd.sh --version=${{ matrix.xsd_ver }} --modules-dir=${MODULES_DIR}
          
      - name: Check xsd module
        run: |
          module load xsd/${{ matrix.xsd_ver }}
          module test xsd/${{ matrix.xsd_ver }}
          
      #===== XERCESC
      - name: Cache xercesc module
        id: cache-xercesc
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.MODULES_DIR }}/opt/xercesc/${{ matrix.xercesc_ver }}
            ${{ env.MODULES_DIR }}/modulefiles/xercesc/${{ matrix.xercesc_ver }}
          key: ${{ matrix.os }}-xercesc-${{ matrix.xercesc_ver }}-${{ hashFiles('dependency-modules/scripts/install_xercesc.sh') }}
      
      - name: Build and install xercesc module
        if: steps.cache-xercesc.outputs.cache-hit != 'true'
        working-directory: dependency-modules/scripts
        run: ./install_xercesc.sh --version=${{ matrix.xercesc_ver }} --modules-dir=${MODULES_DIR}
          
      - name: Check xercesc module
        run: |
          module load xercesc/${{ matrix.xercesc_ver }}
          module test xercesc/${{ matrix.xercesc_ver }}
          
      #===== SUNDIALS
      - name: Cache sundials module
        id: cache-sundials
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.MODULES_DIR }}/opt/sundials/${{ matrix.sundials_ver }}
            ${{ env.MODULES_DIR }}/modulefiles/sundials/${{ matrix.sundials_ver }}
          key: ${{ matrix.os }}-sundials-${{ matrix.sundials_ver }}-${{ hashFiles('dependency-modules/scripts/install_sundials.sh') }}
      
      - name: Build and install sundials module
        if: steps.cache-sundials.outputs.cache-hit != 'true'
        working-directory: dependency-modules/scripts
        run: ./install_sundials.sh --version=${{ matrix.sundials_ver }} --modules-dir=${MODULES_DIR}
          
      - name: Check sundials module
        run: |
          module load sundials/${{ matrix.sundials_ver }}
          module test sundials/${{ matrix.sundials_ver }}
          
      #===== BOOST
      - name: Cache boost module
        id: cache-boost
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.MODULES_DIR }}/opt/boost/${{ matrix.boost_ver }}
            ${{ env.MODULES_DIR }}/modulefiles/boost/${{ matrix.boost_ver }}
          key: ${{ matrix.os }}-boost-${{ matrix.boost_ver }}-${{ hashFiles('dependency-modules/scripts/install_boost.sh') }}
      
      - name: Build and install boost module
        if: steps.cache-boost.outputs.cache-hit != 'true'
        working-directory: dependency-modules/scripts
        run: ./install_boost.sh --version=${{ matrix.boost_ver }} --modules-dir=${MODULES_DIR}
          
      - name: Check boost module
        run: |
          module load boost/${{ matrix.boost_ver }}
          module test boost/${{ matrix.boost_ver }}
          
      #===== VTK
      - name: Cache vtk module
        id: cache-vtk
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.MODULES_DIR }}/opt/vtk/${{ matrix.vtk_ver }}
            ${{ env.MODULES_DIR }}/modulefiles/vtk/${{ matrix.vtk_ver }}
          key: ${{ matrix.os }}-vtk-${{ matrix.vtk_ver }}-${{ hashFiles('dependency-modules/scripts/install_vtk.sh') }}
      
      - name: Build and install vtk module
        if: steps.cache-vtk.outputs.cache-hit != 'true'
        working-directory: dependency-modules/scripts
        run: ./install_vtk.sh --version=${{ matrix.vtk_ver }} --modules-dir=${MODULES_DIR}
          
      - name: Check vtk module
        run: |
          module load vtk/${{ matrix.vtk_ver }}
          module test vtk/${{ matrix.vtk_ver }}
        
      #===== PETSC + HDF5
      - name: Cache petsc_hdf5 module
        id: cache-petsc_hdf5
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.MODULES_DIR }}/opt/petsc_hdf5/${{ matrix.petsc_ver }}_${{ matrix.hdf5_ver }}
            ${{ env.MODULES_DIR }}/modulefiles/petsc_hdf5/${{ matrix.petsc_ver }}_${{ matrix.hdf5_ver }}/${{ matrix.petsc_arch }}
          key: ${{ matrix.os }}-petsc_hdf5-${{ matrix.petsc_ver }}-${{ matrix.hdf5_ver }}-${{ matrix.petsc_arch }}-${{ hashFiles('dependency-modules/scripts/install_petsc_hdf5.sh') }}
      
      - name: Build and install petsc_hdf5 module
        if: steps.cache-petsc_hdf5.outputs.cache-hit != 'true'
        working-directory: dependency-modules/scripts
        run: ./install_petsc_hdf5.sh --petsc-version=${{ matrix.petsc_ver }} --hdf5-version=${{ matrix.hdf5_ver }} --petsc-arch=${{ matrix.petsc_arch }} --modules-dir=${MODULES_DIR}

      - name: Check petsc_hdf5 module
        run: |
          module load petsc_hdf5/${{ matrix.petsc_ver }}_${{ matrix.hdf5_ver }}/${{ matrix.petsc_arch }}
          module test petsc_hdf5/${{ matrix.petsc_ver }}_${{ matrix.hdf5_ver }}/${{ matrix.petsc_arch }}

      #===== CHASTE
      - name: Checkout Chaste repository
        uses: actions/checkout@v3
        with:
          repository: Chaste/Chaste
          path: Chaste
          submodules: recursive
          
      - name: Make build and test directories
        run: |
          mkdir -p Chaste/build
          mkdir -p ${CHASTE_TEST_OUTPUT}
      
      - name: Get Chaste build info
        working-directory: Chaste/build
        run: |
          module purge
          module load xsd/${{ matrix.xsd_ver }}
          module load xercesc/${{ matrix.xercesc_ver }}
          module load sundials/${{ matrix.sundials_ver }}
          module load boost/${{ matrix.boost_ver }}
          module load vtk/${{ matrix.vtk_ver }}
          module load petsc_hdf5/${{ matrix.petsc_ver }}_${{ matrix.hdf5_ver }}/${{ matrix.petsc_arch }}
          cmake -DCMAKE_BUILD_TYPE=Debug ..
          cmake --build . --parallel $(nproc) --target TestChasteBuildInfo
          ctest -j $(nproc) -V -R TestChasteBuildInfo --output-on-failure | tee buildinfo
          sed -i.bak 's/"//g' buildinfo  # removes quotes from some sundials versions

      - name: Check Chaste build info
        working-directory: Chaste/build
        run: |
          grep "<XSD>${{ matrix.xsd_ver }}</XSD>" buildinfo || exit 1
          grep "<Xerces>${{ matrix.xercesc_ver }}</Xerces>" buildinfo || exit 2
          grep "<SUNDIALS>${{ matrix.sundials_ver }}</SUNDIALS>" buildinfo || exit 3
          grep "<Boost>${{ matrix.boost_ver }}</Boost>" buildinfo || exit 4
          vtk_arr=($(echo "${{ matrix.vtk_ver }}" | sed -e 's/\./ /g'))
          vtk_major=${vtk_arr[0]}
          vtk_minor=${vtk_arr[1]}
          grep "<VTK>${vtk_major}.${vtk_minor}</VTK>" buildinfo || exit 5
          grep "<PETSc>${{ matrix.petsc_ver }}</PETSc>" buildinfo || exit 6
          grep "<HDF5>${{ matrix.hdf5_ver }}</HDF5>" buildinfo || exit 7
          
